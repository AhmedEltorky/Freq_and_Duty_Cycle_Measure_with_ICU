
Freq_and_Duty_Cycle_Measure_with_ICU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000046  00800100  00000862  000008f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000862  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800146  00800146  0000093c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000093c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000096c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  000009ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011e4  00000000  00000000  00000a24  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000961  00000000  00000000  00001c08  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006b8  00000000  00000000  00002569  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000118  00000000  00000000  00002c24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f1  00000000  00000000  00002d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000981  00000000  00000000  0000322d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00003bae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 f6 01 	jmp	0x3ec	; 0x3ec <__vector_10>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e6       	ldi	r30, 0x62	; 98
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 34       	cpi	r26, 0x46	; 70
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e4       	ldi	r26, 0x46	; 70
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 34       	cpi	r26, 0x4E	; 78
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 18 01 	call	0x230	; 0x230 <main>
  9e:	0c 94 2f 04 	jmp	0x85e	; 0x85e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcd_write_cmnd>:
void lcd_gotoxy(unsigned char x, unsigned char y)
{
	unsigned char arr_address[] = {0x80, 0xC0};
	lcd_write_cmnd(arr_address[y - 1] + x - 1);
	_delay_us(100);
}
  a6:	98 2f       	mov	r25, r24
  a8:	90 7f       	andi	r25, 0xF0	; 240
  aa:	9b b9       	out	0x0b, r25	; 11
  ac:	40 98       	cbi	0x08, 0	; 8
  ae:	41 98       	cbi	0x08, 1	; 8
  b0:	42 9a       	sbi	0x08, 2	; 8
  b2:	ef e8       	ldi	r30, 0x8F	; 143
  b4:	f1 e0       	ldi	r31, 0x01	; 1
  b6:	31 97       	sbiw	r30, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <lcd_write_cmnd+0x10>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <lcd_write_cmnd+0x16>
  bc:	00 00       	nop
  be:	42 98       	cbi	0x08, 2	; 8
  c0:	ef ea       	ldi	r30, 0xAF	; 175
  c2:	f4 e0       	ldi	r31, 0x04	; 4
  c4:	31 97       	sbiw	r30, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <lcd_write_cmnd+0x1e>
  c8:	00 c0       	rjmp	.+0      	; 0xca <lcd_write_cmnd+0x24>
  ca:	00 00       	nop
  cc:	82 95       	swap	r24
  ce:	80 7f       	andi	r24, 0xF0	; 240
  d0:	8b b9       	out	0x0b, r24	; 11
  d2:	42 9a       	sbi	0x08, 2	; 8
  d4:	8f e8       	ldi	r24, 0x8F	; 143
  d6:	91 e0       	ldi	r25, 0x01	; 1
  d8:	01 97       	sbiw	r24, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <lcd_write_cmnd+0x32>
  dc:	00 c0       	rjmp	.+0      	; 0xde <lcd_write_cmnd+0x38>
  de:	00 00       	nop
  e0:	42 98       	cbi	0x08, 2	; 8
  e2:	ef ea       	ldi	r30, 0xAF	; 175
  e4:	f4 e0       	ldi	r31, 0x04	; 4
  e6:	31 97       	sbiw	r30, 0x01	; 1
  e8:	f1 f7       	brne	.-4      	; 0xe6 <lcd_write_cmnd+0x40>
  ea:	00 c0       	rjmp	.+0      	; 0xec <lcd_write_cmnd+0x46>
  ec:	00 00       	nop
  ee:	08 95       	ret

000000f0 <lcd_write_data>:
  f0:	98 2f       	mov	r25, r24
  f2:	90 7f       	andi	r25, 0xF0	; 240
  f4:	9b b9       	out	0x0b, r25	; 11
  f6:	40 9a       	sbi	0x08, 0	; 8
  f8:	41 98       	cbi	0x08, 1	; 8
  fa:	42 9a       	sbi	0x08, 2	; 8
  fc:	95 e8       	ldi	r25, 0x85	; 133
  fe:	9a 95       	dec	r25
 100:	f1 f7       	brne	.-4      	; 0xfe <lcd_write_data+0xe>
 102:	00 00       	nop
 104:	42 98       	cbi	0x08, 2	; 8
 106:	e7 ec       	ldi	r30, 0xC7	; 199
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	31 97       	sbiw	r30, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <lcd_write_data+0x1a>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <lcd_write_data+0x20>
 110:	00 00       	nop
 112:	82 95       	swap	r24
 114:	80 7f       	andi	r24, 0xF0	; 240
 116:	8b b9       	out	0x0b, r24	; 11
 118:	42 9a       	sbi	0x08, 2	; 8
 11a:	f5 e8       	ldi	r31, 0x85	; 133
 11c:	fa 95       	dec	r31
 11e:	f1 f7       	brne	.-4      	; 0x11c <lcd_write_data+0x2c>
 120:	00 00       	nop
 122:	42 98       	cbi	0x08, 2	; 8
 124:	87 ec       	ldi	r24, 0xC7	; 199
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <lcd_write_data+0x38>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <lcd_write_data+0x3e>
 12e:	00 00       	nop
 130:	08 95       	ret

00000132 <lcd_init>:
 132:	80 ef       	ldi	r24, 0xF0	; 240
 134:	8a b9       	out	0x0a, r24	; 10
 136:	87 e0       	ldi	r24, 0x07	; 7
 138:	87 b9       	out	0x07, r24	; 7
 13a:	42 98       	cbi	0x08, 2	; 8
 13c:	8f e9       	ldi	r24, 0x9F	; 159
 13e:	9f e0       	ldi	r25, 0x0F	; 15
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <lcd_init+0xe>
 144:	00 c0       	rjmp	.+0      	; 0x146 <lcd_init+0x14>
 146:	00 00       	nop
 148:	83 e3       	ldi	r24, 0x33	; 51
 14a:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_cmnd>
 14e:	82 e3       	ldi	r24, 0x32	; 50
 150:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_cmnd>
 154:	88 e2       	ldi	r24, 0x28	; 40
 156:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_cmnd>
 15a:	8f e0       	ldi	r24, 0x0F	; 15
 15c:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_cmnd>
 160:	8f e0       	ldi	r24, 0x0F	; 15
 162:	97 e2       	ldi	r25, 0x27	; 39
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <lcd_init+0x32>
 168:	00 c0       	rjmp	.+0      	; 0x16a <lcd_init+0x38>
 16a:	00 00       	nop
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_cmnd>
 172:	8f e0       	ldi	r24, 0x0F	; 15
 174:	97 e2       	ldi	r25, 0x27	; 39
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <lcd_init+0x44>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <lcd_init+0x4a>
 17c:	00 00       	nop
 17e:	80 e8       	ldi	r24, 0x80	; 128
 180:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_cmnd>
 184:	8f e0       	ldi	r24, 0x0F	; 15
 186:	97 e2       	ldi	r25, 0x27	; 39
 188:	01 97       	sbiw	r24, 0x01	; 1
 18a:	f1 f7       	brne	.-4      	; 0x188 <lcd_init+0x56>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <lcd_init+0x5c>
 18e:	00 00       	nop
 190:	86 e0       	ldi	r24, 0x06	; 6
 192:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_cmnd>
 196:	8f e0       	ldi	r24, 0x0F	; 15
 198:	97 e2       	ldi	r25, 0x27	; 39
 19a:	01 97       	sbiw	r24, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <lcd_init+0x68>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <lcd_init+0x6e>
 1a0:	00 00       	nop
 1a2:	08 95       	ret

000001a4 <lcd_goto_rc>:
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	cd b7       	in	r28, 0x3d	; 61
 1aa:	de b7       	in	r29, 0x3e	; 62
 1ac:	a0 97       	sbiw	r28, 0x20	; 32
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	f8 94       	cli
 1b2:	de bf       	out	0x3e, r29	; 62
 1b4:	0f be       	out	0x3f, r0	; 63
 1b6:	cd bf       	out	0x3d, r28	; 61
 1b8:	90 e2       	ldi	r25, 0x20	; 32
 1ba:	e0 e0       	ldi	r30, 0x00	; 0
 1bc:	f1 e0       	ldi	r31, 0x01	; 1
 1be:	de 01       	movw	r26, r28
 1c0:	11 96       	adiw	r26, 0x01	; 1
 1c2:	01 90       	ld	r0, Z+
 1c4:	0d 92       	st	X+, r0
 1c6:	9a 95       	dec	r25
 1c8:	e1 f7       	brne	.-8      	; 0x1c2 <lcd_goto_rc+0x1e>
 1ca:	e1 e0       	ldi	r30, 0x01	; 1
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	ec 0f       	add	r30, r28
 1d0:	fd 1f       	adc	r31, r29
 1d2:	90 e1       	ldi	r25, 0x10	; 16
 1d4:	89 9f       	mul	r24, r25
 1d6:	e0 0d       	add	r30, r0
 1d8:	f1 1d       	adc	r31, r1
 1da:	11 24       	eor	r1, r1
 1dc:	e6 0f       	add	r30, r22
 1de:	f1 1d       	adc	r31, r1
 1e0:	80 81       	ld	r24, Z
 1e2:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_cmnd>
 1e6:	87 ec       	ldi	r24, 0xC7	; 199
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <lcd_goto_rc+0x46>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <lcd_goto_rc+0x4c>
 1f0:	00 00       	nop
 1f2:	a0 96       	adiw	r28, 0x20	; 32
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	f8 94       	cli
 1f8:	de bf       	out	0x3e, r29	; 62
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	cd bf       	out	0x3d, r28	; 61
 1fe:	df 91       	pop	r29
 200:	cf 91       	pop	r28
 202:	08 95       	ret

00000204 <lcd_write_string>:

void lcd_write_string(char *str)
{
 204:	0f 93       	push	r16
 206:	1f 93       	push	r17
 208:	cf 93       	push	r28
 20a:	fc 01       	movw	r30, r24
	unsigned char index = 0;
	while (str[index] != 0)
 20c:	80 81       	ld	r24, Z
 20e:	88 23       	and	r24, r24
 210:	59 f0       	breq	.+22     	; 0x228 <lcd_write_string+0x24>
 212:	8f 01       	movw	r16, r30
 214:	c0 e0       	ldi	r28, 0x00	; 0
	{
		lcd_write_data(str[index]);
 216:	0e 94 78 00 	call	0xf0	; 0xf0 <lcd_write_data>
		index++;
 21a:	cf 5f       	subi	r28, 0xFF	; 255
}

void lcd_write_string(char *str)
{
	unsigned char index = 0;
	while (str[index] != 0)
 21c:	f8 01       	movw	r30, r16
 21e:	ec 0f       	add	r30, r28
 220:	f1 1d       	adc	r31, r1
 222:	80 81       	ld	r24, Z
 224:	81 11       	cpse	r24, r1
 226:	f7 cf       	rjmp	.-18     	; 0x216 <lcd_write_string+0x12>
	{
		lcd_write_data(str[index]);
		index++;
	}
}
 228:	cf 91       	pop	r28
 22a:	1f 91       	pop	r17
 22c:	0f 91       	pop	r16
 22e:	08 95       	ret

00000230 <main>:

volatile uint16_t a, b, c;
volatile uint8_t i, ready;

int main(void)
{
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	cd b7       	in	r28, 0x3d	; 61
 236:	de b7       	in	r29, 0x3e	; 62
 238:	65 97       	sbiw	r28, 0x15	; 21
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	f8 94       	cli
 23e:	de bf       	out	0x3e, r29	; 62
 240:	0f be       	out	0x3f, r0	; 63
 242:	cd bf       	out	0x3d, r28	; 61
	char freq_data[14], duty_data[7];

	/* Timer1 initial */
	TCCR1B |= (1 << ICNC1); // enable noise canceler input
 244:	e1 e8       	ldi	r30, 0x81	; 129
 246:	f0 e0       	ldi	r31, 0x00	; 0
 248:	80 81       	ld	r24, Z
 24a:	80 68       	ori	r24, 0x80	; 128
 24c:	80 83       	st	Z, r24
	TCCR1B |= (1 << CS11);	// set prescaler to 8
 24e:	80 81       	ld	r24, Z
 250:	82 60       	ori	r24, 0x02	; 2
 252:	80 83       	st	Z, r24
	TCCR1B |= (1 << ICES1); // the rising edge will trigger the capture
 254:	80 81       	ld	r24, Z
 256:	80 64       	ori	r24, 0x40	; 64
 258:	80 83       	st	Z, r24
	TIMSK1 |= (1 << ICIE1); // enable input capture interrupt
 25a:	ef e6       	ldi	r30, 0x6F	; 111
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	80 81       	ld	r24, Z
 260:	80 62       	ori	r24, 0x20	; 32
 262:	80 83       	st	Z, r24

	/* LCD initial */
	lcd_init();
 264:	0e 94 99 00 	call	0x132	; 0x132 <lcd_init>
	lcd_write_cmnd(LCD_CURSOR_OFF);
 268:	8c e0       	ldi	r24, 0x0C	; 12
 26a:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_cmnd>
	lcd_write_string("Signal Measuring");
 26e:	80 e2       	ldi	r24, 0x20	; 32
 270:	91 e0       	ldi	r25, 0x01	; 1
 272:	0e 94 02 01 	call	0x204	; 0x204 <lcd_write_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 276:	2f ef       	ldi	r18, 0xFF	; 255
 278:	84 e3       	ldi	r24, 0x34	; 52
 27a:	9c e0       	ldi	r25, 0x0C	; 12
 27c:	21 50       	subi	r18, 0x01	; 1
 27e:	80 40       	sbci	r24, 0x00	; 0
 280:	90 40       	sbci	r25, 0x00	; 0
 282:	e1 f7       	brne	.-8      	; 0x27c <main+0x4c>
 284:	00 c0       	rjmp	.+0      	; 0x286 <main+0x56>
 286:	00 00       	nop
	_delay_ms(500);

	sei(); // set global interrupt
 288:	78 94       	sei
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 28a:	0f 2e       	mov	r0, r31
 28c:	81 2c       	mov	r8, r1
 28e:	f2 e1       	ldi	r31, 0x12	; 18
 290:	9f 2e       	mov	r9, r31
 292:	fa e7       	ldi	r31, 0x7A	; 122
 294:	af 2e       	mov	r10, r31
 296:	b1 2c       	mov	r11, r1
 298:	f0 2d       	mov	r31, r0
			_delay_ms(1000);
		}

		i = 0;
		ready = 0;
		TCNT1 = 0;
 29a:	0f 2e       	mov	r0, r31
 29c:	f4 e8       	ldi	r31, 0x84	; 132
 29e:	ef 2e       	mov	r14, r31
 2a0:	f1 2c       	mov	r15, r1
 2a2:	f0 2d       	mov	r31, r0

	sei(); // set global interrupt

	while (1)
	{
		while (!ready)
 2a4:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <ready>
 2a8:	88 23       	and	r24, r24
 2aa:	e1 f3       	breq	.-8      	; 0x2a4 <main+0x74>
			; // wait till measures be ready
		cli();
 2ac:	f8 94       	cli

		uint16_t high = (b - a);
 2ae:	60 91 46 01 	lds	r22, 0x0146	; 0x800146 <__data_end>
 2b2:	70 91 47 01 	lds	r23, 0x0147	; 0x800147 <__data_end+0x1>
 2b6:	40 91 4b 01 	lds	r20, 0x014B	; 0x80014b <a>
 2ba:	50 91 4c 01 	lds	r21, 0x014C	; 0x80014c <a+0x1>
		uint16_t period = (c - a);
 2be:	00 91 49 01 	lds	r16, 0x0149	; 0x800149 <c>
 2c2:	10 91 4a 01 	lds	r17, 0x014A	; 0x80014a <c+0x1>
 2c6:	e0 91 4b 01 	lds	r30, 0x014B	; 0x80014b <a>
 2ca:	f0 91 4c 01 	lds	r31, 0x014C	; 0x80014c <a+0x1>

		// check if values valid
		if (a < b && b < c)
 2ce:	20 91 4b 01 	lds	r18, 0x014B	; 0x80014b <a>
 2d2:	30 91 4c 01 	lds	r19, 0x014C	; 0x80014c <a+0x1>
 2d6:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <__data_end>
 2da:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <__data_end+0x1>
 2de:	28 17       	cp	r18, r24
 2e0:	39 07       	cpc	r19, r25
 2e2:	08 f0       	brcs	.+2      	; 0x2e6 <main+0xb6>
 2e4:	7a c0       	rjmp	.+244    	; 0x3da <main+0x1aa>
 2e6:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <__data_end>
 2ea:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <__data_end+0x1>
 2ee:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <c>
 2f2:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <c+0x1>
 2f6:	28 17       	cp	r18, r24
 2f8:	39 07       	cpc	r19, r25
 2fa:	08 f0       	brcs	.+2      	; 0x2fe <main+0xce>
 2fc:	6e c0       	rjmp	.+220    	; 0x3da <main+0x1aa>
		while (!ready)
			; // wait till measures be ready
		cli();

		uint16_t high = (b - a);
		uint16_t period = (c - a);
 2fe:	0e 1b       	sub	r16, r30
 300:	1f 0b       	sbc	r17, r31
 302:	64 1b       	sub	r22, r20
 304:	75 0b       	sbc	r23, r21
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__floatunsisf>
 30e:	2b 01       	movw	r4, r22
 310:	3c 01       	movw	r6, r24
 312:	b8 01       	movw	r22, r16
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__floatunsisf>
 31c:	9b 01       	movw	r18, r22
 31e:	ac 01       	movw	r20, r24
 320:	c3 01       	movw	r24, r6
 322:	b2 01       	movw	r22, r4
 324:	0e 94 3c 02 	call	0x478	; 0x478 <__divsf3>
 328:	20 e0       	ldi	r18, 0x00	; 0
 32a:	30 e0       	ldi	r19, 0x00	; 0
 32c:	48 ec       	ldi	r20, 0xC8	; 200
 32e:	52 e4       	ldi	r21, 0x42	; 66
 330:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__mulsf3>
 334:	0e 94 ae 02 	call	0x55c	; 0x55c <__fixunssfsi>
 338:	86 2f       	mov	r24, r22
 33a:	4a e0       	ldi	r20, 0x0A	; 10
 33c:	be 01       	movw	r22, r28
 33e:	61 5f       	subi	r22, 0xF1	; 241
 340:	7f 4f       	sbci	r23, 0xFF	; 255
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <__itoa_ncheck>
 348:	98 01       	movw	r18, r16
 34a:	22 0f       	add	r18, r18
 34c:	33 1f       	adc	r19, r19
 34e:	22 0f       	add	r18, r18
 350:	33 1f       	adc	r19, r19
 352:	22 0f       	add	r18, r18
 354:	33 1f       	adc	r19, r19
 356:	40 e0       	ldi	r20, 0x00	; 0
 358:	50 e0       	ldi	r21, 0x00	; 0
 35a:	c5 01       	movw	r24, r10
 35c:	b4 01       	movw	r22, r8
 35e:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__udivmodsi4>
 362:	da 01       	movw	r26, r20
 364:	c9 01       	movw	r24, r18
 366:	4a e0       	ldi	r20, 0x0A	; 10
 368:	be 01       	movw	r22, r28
 36a:	6f 5f       	subi	r22, 0xFF	; 255
 36c:	7f 4f       	sbci	r23, 0xFF	; 255
 36e:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <__itoa_ncheck>
		{
			uint8_t duty_cycle = ((float)high / period) * 100;
			uint32_t freq = F_CPU / (uint32_t)(8 * period);
			itoa(duty_cycle, duty_data, 10);
			itoa(freq, freq_data, 10);
			lcd_write_cmnd(LCD_CLEAR);
 372:	81 e0       	ldi	r24, 0x01	; 1
 374:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_write_cmnd>
 378:	ef ec       	ldi	r30, 0xCF	; 207
 37a:	f7 e0       	ldi	r31, 0x07	; 7
 37c:	31 97       	sbiw	r30, 0x01	; 1
 37e:	f1 f7       	brne	.-4      	; 0x37c <main+0x14c>
 380:	00 c0       	rjmp	.+0      	; 0x382 <main+0x152>
 382:	00 00       	nop
			_delay_ms(1);
			lcd_write_string("Freq: ");
 384:	81 e3       	ldi	r24, 0x31	; 49
 386:	91 e0       	ldi	r25, 0x01	; 1
 388:	0e 94 02 01 	call	0x204	; 0x204 <lcd_write_string>
			lcd_write_string(freq_data);
 38c:	ce 01       	movw	r24, r28
 38e:	01 96       	adiw	r24, 0x01	; 1
 390:	0e 94 02 01 	call	0x204	; 0x204 <lcd_write_string>
			lcd_write_string(" Hz");
 394:	88 e3       	ldi	r24, 0x38	; 56
 396:	91 e0       	ldi	r25, 0x01	; 1
 398:	0e 94 02 01 	call	0x204	; 0x204 <lcd_write_string>
			lcd_goto_rc(1, 0);
 39c:	60 e0       	ldi	r22, 0x00	; 0
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <lcd_goto_rc>
 3a4:	8f ec       	ldi	r24, 0xCF	; 207
 3a6:	97 e0       	ldi	r25, 0x07	; 7
 3a8:	01 97       	sbiw	r24, 0x01	; 1
 3aa:	f1 f7       	brne	.-4      	; 0x3a8 <main+0x178>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <main+0x17e>
 3ae:	00 00       	nop
			_delay_ms(1);
			lcd_write_string("Duty: ");
 3b0:	8c e3       	ldi	r24, 0x3C	; 60
 3b2:	91 e0       	ldi	r25, 0x01	; 1
 3b4:	0e 94 02 01 	call	0x204	; 0x204 <lcd_write_string>
			lcd_write_string(duty_data);
 3b8:	ce 01       	movw	r24, r28
 3ba:	0f 96       	adiw	r24, 0x0f	; 15
 3bc:	0e 94 02 01 	call	0x204	; 0x204 <lcd_write_string>
			lcd_write_string(" %");
 3c0:	83 e4       	ldi	r24, 0x43	; 67
 3c2:	91 e0       	ldi	r25, 0x01	; 1
 3c4:	0e 94 02 01 	call	0x204	; 0x204 <lcd_write_string>
 3c8:	9f ef       	ldi	r25, 0xFF	; 255
 3ca:	e9 e6       	ldi	r30, 0x69	; 105
 3cc:	f8 e1       	ldi	r31, 0x18	; 24
 3ce:	91 50       	subi	r25, 0x01	; 1
 3d0:	e0 40       	sbci	r30, 0x00	; 0
 3d2:	f0 40       	sbci	r31, 0x00	; 0
 3d4:	e1 f7       	brne	.-8      	; 0x3ce <main+0x19e>
 3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <main+0x1a8>
 3d8:	00 00       	nop
			_delay_ms(1000);
		}

		i = 0;
 3da:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <i>
		ready = 0;
 3de:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <ready>
		TCNT1 = 0;
 3e2:	f7 01       	movw	r30, r14
 3e4:	11 82       	std	Z+1, r1	; 0x01
 3e6:	10 82       	st	Z, r1
		sei();
 3e8:	78 94       	sei
	}
 3ea:	5c cf       	rjmp	.-328    	; 0x2a4 <main+0x74>

000003ec <__vector_10>:
}

ISR(TIMER1_CAPT_vect)
{
 3ec:	1f 92       	push	r1
 3ee:	0f 92       	push	r0
 3f0:	0f b6       	in	r0, 0x3f	; 63
 3f2:	0f 92       	push	r0
 3f4:	11 24       	eor	r1, r1
 3f6:	8f 93       	push	r24
 3f8:	9f 93       	push	r25
 3fa:	ef 93       	push	r30
 3fc:	ff 93       	push	r31
	i++;
 3fe:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <i>
 402:	8f 5f       	subi	r24, 0xFF	; 255
 404:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <i>
	switch (i)
 408:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <i>
 40c:	82 30       	cpi	r24, 0x02	; 2
 40e:	91 f0       	breq	.+36     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 410:	83 30       	cpi	r24, 0x03	; 3
 412:	f1 f0       	breq	.+60     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 414:	81 30       	cpi	r24, 0x01	; 1
 416:	39 f5       	brne	.+78     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
	{
	case 1:
		a = ICR1;
 418:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 41c:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 420:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <a+0x1>
 424:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <a>
		CLR_BIT(TCCR1B, ICES1); // interrupt at falling edge
 428:	e1 e8       	ldi	r30, 0x81	; 129
 42a:	f0 e0       	ldi	r31, 0x00	; 0
 42c:	80 81       	ld	r24, Z
 42e:	8f 7b       	andi	r24, 0xBF	; 191
 430:	80 83       	st	Z, r24
		break;
 432:	19 c0       	rjmp	.+50     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
	case 2:
		b = ICR1;
 434:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 438:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 43c:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <__data_end+0x1>
 440:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <__data_end>
		SET_BIT(TCCR1B, ICES1); // interrupt at rising edge
 444:	e1 e8       	ldi	r30, 0x81	; 129
 446:	f0 e0       	ldi	r31, 0x00	; 0
 448:	80 81       	ld	r24, Z
 44a:	80 64       	ori	r24, 0x40	; 64
 44c:	80 83       	st	Z, r24
		break;
 44e:	0b c0       	rjmp	.+22     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
	case 3:
		c = ICR1;
 450:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 454:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 458:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <c+0x1>
 45c:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <c>
		ready = 1;
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <ready>
		break;
	default:
		break;
	}
}
 466:	ff 91       	pop	r31
 468:	ef 91       	pop	r30
 46a:	9f 91       	pop	r25
 46c:	8f 91       	pop	r24
 46e:	0f 90       	pop	r0
 470:	0f be       	out	0x3f, r0	; 63
 472:	0f 90       	pop	r0
 474:	1f 90       	pop	r1
 476:	18 95       	reti

00000478 <__divsf3>:
 478:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__divsf3x>
 47c:	0c 94 31 03 	jmp	0x662	; 0x662 <__fp_round>
 480:	0e 94 2a 03 	call	0x654	; 0x654 <__fp_pscB>
 484:	58 f0       	brcs	.+22     	; 0x49c <__divsf3+0x24>
 486:	0e 94 23 03 	call	0x646	; 0x646 <__fp_pscA>
 48a:	40 f0       	brcs	.+16     	; 0x49c <__divsf3+0x24>
 48c:	29 f4       	brne	.+10     	; 0x498 <__divsf3+0x20>
 48e:	5f 3f       	cpi	r21, 0xFF	; 255
 490:	29 f0       	breq	.+10     	; 0x49c <__divsf3+0x24>
 492:	0c 94 1a 03 	jmp	0x634	; 0x634 <__fp_inf>
 496:	51 11       	cpse	r21, r1
 498:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__fp_szero>
 49c:	0c 94 20 03 	jmp	0x640	; 0x640 <__fp_nan>

000004a0 <__divsf3x>:
 4a0:	0e 94 42 03 	call	0x684	; 0x684 <__fp_split3>
 4a4:	68 f3       	brcs	.-38     	; 0x480 <__divsf3+0x8>

000004a6 <__divsf3_pse>:
 4a6:	99 23       	and	r25, r25
 4a8:	b1 f3       	breq	.-20     	; 0x496 <__divsf3+0x1e>
 4aa:	55 23       	and	r21, r21
 4ac:	91 f3       	breq	.-28     	; 0x492 <__divsf3+0x1a>
 4ae:	95 1b       	sub	r25, r21
 4b0:	55 0b       	sbc	r21, r21
 4b2:	bb 27       	eor	r27, r27
 4b4:	aa 27       	eor	r26, r26
 4b6:	62 17       	cp	r22, r18
 4b8:	73 07       	cpc	r23, r19
 4ba:	84 07       	cpc	r24, r20
 4bc:	38 f0       	brcs	.+14     	; 0x4cc <__divsf3_pse+0x26>
 4be:	9f 5f       	subi	r25, 0xFF	; 255
 4c0:	5f 4f       	sbci	r21, 0xFF	; 255
 4c2:	22 0f       	add	r18, r18
 4c4:	33 1f       	adc	r19, r19
 4c6:	44 1f       	adc	r20, r20
 4c8:	aa 1f       	adc	r26, r26
 4ca:	a9 f3       	breq	.-22     	; 0x4b6 <__divsf3_pse+0x10>
 4cc:	35 d0       	rcall	.+106    	; 0x538 <__divsf3_pse+0x92>
 4ce:	0e 2e       	mov	r0, r30
 4d0:	3a f0       	brmi	.+14     	; 0x4e0 <__divsf3_pse+0x3a>
 4d2:	e0 e8       	ldi	r30, 0x80	; 128
 4d4:	32 d0       	rcall	.+100    	; 0x53a <__divsf3_pse+0x94>
 4d6:	91 50       	subi	r25, 0x01	; 1
 4d8:	50 40       	sbci	r21, 0x00	; 0
 4da:	e6 95       	lsr	r30
 4dc:	00 1c       	adc	r0, r0
 4de:	ca f7       	brpl	.-14     	; 0x4d2 <__divsf3_pse+0x2c>
 4e0:	2b d0       	rcall	.+86     	; 0x538 <__divsf3_pse+0x92>
 4e2:	fe 2f       	mov	r31, r30
 4e4:	29 d0       	rcall	.+82     	; 0x538 <__divsf3_pse+0x92>
 4e6:	66 0f       	add	r22, r22
 4e8:	77 1f       	adc	r23, r23
 4ea:	88 1f       	adc	r24, r24
 4ec:	bb 1f       	adc	r27, r27
 4ee:	26 17       	cp	r18, r22
 4f0:	37 07       	cpc	r19, r23
 4f2:	48 07       	cpc	r20, r24
 4f4:	ab 07       	cpc	r26, r27
 4f6:	b0 e8       	ldi	r27, 0x80	; 128
 4f8:	09 f0       	breq	.+2      	; 0x4fc <__divsf3_pse+0x56>
 4fa:	bb 0b       	sbc	r27, r27
 4fc:	80 2d       	mov	r24, r0
 4fe:	bf 01       	movw	r22, r30
 500:	ff 27       	eor	r31, r31
 502:	93 58       	subi	r25, 0x83	; 131
 504:	5f 4f       	sbci	r21, 0xFF	; 255
 506:	3a f0       	brmi	.+14     	; 0x516 <__divsf3_pse+0x70>
 508:	9e 3f       	cpi	r25, 0xFE	; 254
 50a:	51 05       	cpc	r21, r1
 50c:	78 f0       	brcs	.+30     	; 0x52c <__divsf3_pse+0x86>
 50e:	0c 94 1a 03 	jmp	0x634	; 0x634 <__fp_inf>
 512:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__fp_szero>
 516:	5f 3f       	cpi	r21, 0xFF	; 255
 518:	e4 f3       	brlt	.-8      	; 0x512 <__divsf3_pse+0x6c>
 51a:	98 3e       	cpi	r25, 0xE8	; 232
 51c:	d4 f3       	brlt	.-12     	; 0x512 <__divsf3_pse+0x6c>
 51e:	86 95       	lsr	r24
 520:	77 95       	ror	r23
 522:	67 95       	ror	r22
 524:	b7 95       	ror	r27
 526:	f7 95       	ror	r31
 528:	9f 5f       	subi	r25, 0xFF	; 255
 52a:	c9 f7       	brne	.-14     	; 0x51e <__divsf3_pse+0x78>
 52c:	88 0f       	add	r24, r24
 52e:	91 1d       	adc	r25, r1
 530:	96 95       	lsr	r25
 532:	87 95       	ror	r24
 534:	97 f9       	bld	r25, 7
 536:	08 95       	ret
 538:	e1 e0       	ldi	r30, 0x01	; 1
 53a:	66 0f       	add	r22, r22
 53c:	77 1f       	adc	r23, r23
 53e:	88 1f       	adc	r24, r24
 540:	bb 1f       	adc	r27, r27
 542:	62 17       	cp	r22, r18
 544:	73 07       	cpc	r23, r19
 546:	84 07       	cpc	r24, r20
 548:	ba 07       	cpc	r27, r26
 54a:	20 f0       	brcs	.+8      	; 0x554 <__divsf3_pse+0xae>
 54c:	62 1b       	sub	r22, r18
 54e:	73 0b       	sbc	r23, r19
 550:	84 0b       	sbc	r24, r20
 552:	ba 0b       	sbc	r27, r26
 554:	ee 1f       	adc	r30, r30
 556:	88 f7       	brcc	.-30     	; 0x53a <__divsf3_pse+0x94>
 558:	e0 95       	com	r30
 55a:	08 95       	ret

0000055c <__fixunssfsi>:
 55c:	0e 94 4a 03 	call	0x694	; 0x694 <__fp_splitA>
 560:	88 f0       	brcs	.+34     	; 0x584 <__fixunssfsi+0x28>
 562:	9f 57       	subi	r25, 0x7F	; 127
 564:	98 f0       	brcs	.+38     	; 0x58c <__fixunssfsi+0x30>
 566:	b9 2f       	mov	r27, r25
 568:	99 27       	eor	r25, r25
 56a:	b7 51       	subi	r27, 0x17	; 23
 56c:	b0 f0       	brcs	.+44     	; 0x59a <__fixunssfsi+0x3e>
 56e:	e1 f0       	breq	.+56     	; 0x5a8 <__fixunssfsi+0x4c>
 570:	66 0f       	add	r22, r22
 572:	77 1f       	adc	r23, r23
 574:	88 1f       	adc	r24, r24
 576:	99 1f       	adc	r25, r25
 578:	1a f0       	brmi	.+6      	; 0x580 <__fixunssfsi+0x24>
 57a:	ba 95       	dec	r27
 57c:	c9 f7       	brne	.-14     	; 0x570 <__fixunssfsi+0x14>
 57e:	14 c0       	rjmp	.+40     	; 0x5a8 <__fixunssfsi+0x4c>
 580:	b1 30       	cpi	r27, 0x01	; 1
 582:	91 f0       	breq	.+36     	; 0x5a8 <__fixunssfsi+0x4c>
 584:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__fp_zero>
 588:	b1 e0       	ldi	r27, 0x01	; 1
 58a:	08 95       	ret
 58c:	0c 94 64 03 	jmp	0x6c8	; 0x6c8 <__fp_zero>
 590:	67 2f       	mov	r22, r23
 592:	78 2f       	mov	r23, r24
 594:	88 27       	eor	r24, r24
 596:	b8 5f       	subi	r27, 0xF8	; 248
 598:	39 f0       	breq	.+14     	; 0x5a8 <__fixunssfsi+0x4c>
 59a:	b9 3f       	cpi	r27, 0xF9	; 249
 59c:	cc f3       	brlt	.-14     	; 0x590 <__fixunssfsi+0x34>
 59e:	86 95       	lsr	r24
 5a0:	77 95       	ror	r23
 5a2:	67 95       	ror	r22
 5a4:	b3 95       	inc	r27
 5a6:	d9 f7       	brne	.-10     	; 0x59e <__fixunssfsi+0x42>
 5a8:	3e f4       	brtc	.+14     	; 0x5b8 <__fixunssfsi+0x5c>
 5aa:	90 95       	com	r25
 5ac:	80 95       	com	r24
 5ae:	70 95       	com	r23
 5b0:	61 95       	neg	r22
 5b2:	7f 4f       	sbci	r23, 0xFF	; 255
 5b4:	8f 4f       	sbci	r24, 0xFF	; 255
 5b6:	9f 4f       	sbci	r25, 0xFF	; 255
 5b8:	08 95       	ret

000005ba <__floatunsisf>:
 5ba:	e8 94       	clt
 5bc:	09 c0       	rjmp	.+18     	; 0x5d0 <__floatsisf+0x12>

000005be <__floatsisf>:
 5be:	97 fb       	bst	r25, 7
 5c0:	3e f4       	brtc	.+14     	; 0x5d0 <__floatsisf+0x12>
 5c2:	90 95       	com	r25
 5c4:	80 95       	com	r24
 5c6:	70 95       	com	r23
 5c8:	61 95       	neg	r22
 5ca:	7f 4f       	sbci	r23, 0xFF	; 255
 5cc:	8f 4f       	sbci	r24, 0xFF	; 255
 5ce:	9f 4f       	sbci	r25, 0xFF	; 255
 5d0:	99 23       	and	r25, r25
 5d2:	a9 f0       	breq	.+42     	; 0x5fe <__floatsisf+0x40>
 5d4:	f9 2f       	mov	r31, r25
 5d6:	96 e9       	ldi	r25, 0x96	; 150
 5d8:	bb 27       	eor	r27, r27
 5da:	93 95       	inc	r25
 5dc:	f6 95       	lsr	r31
 5de:	87 95       	ror	r24
 5e0:	77 95       	ror	r23
 5e2:	67 95       	ror	r22
 5e4:	b7 95       	ror	r27
 5e6:	f1 11       	cpse	r31, r1
 5e8:	f8 cf       	rjmp	.-16     	; 0x5da <__floatsisf+0x1c>
 5ea:	fa f4       	brpl	.+62     	; 0x62a <__floatsisf+0x6c>
 5ec:	bb 0f       	add	r27, r27
 5ee:	11 f4       	brne	.+4      	; 0x5f4 <__floatsisf+0x36>
 5f0:	60 ff       	sbrs	r22, 0
 5f2:	1b c0       	rjmp	.+54     	; 0x62a <__floatsisf+0x6c>
 5f4:	6f 5f       	subi	r22, 0xFF	; 255
 5f6:	7f 4f       	sbci	r23, 0xFF	; 255
 5f8:	8f 4f       	sbci	r24, 0xFF	; 255
 5fa:	9f 4f       	sbci	r25, 0xFF	; 255
 5fc:	16 c0       	rjmp	.+44     	; 0x62a <__floatsisf+0x6c>
 5fe:	88 23       	and	r24, r24
 600:	11 f0       	breq	.+4      	; 0x606 <__floatsisf+0x48>
 602:	96 e9       	ldi	r25, 0x96	; 150
 604:	11 c0       	rjmp	.+34     	; 0x628 <__floatsisf+0x6a>
 606:	77 23       	and	r23, r23
 608:	21 f0       	breq	.+8      	; 0x612 <__floatsisf+0x54>
 60a:	9e e8       	ldi	r25, 0x8E	; 142
 60c:	87 2f       	mov	r24, r23
 60e:	76 2f       	mov	r23, r22
 610:	05 c0       	rjmp	.+10     	; 0x61c <__floatsisf+0x5e>
 612:	66 23       	and	r22, r22
 614:	71 f0       	breq	.+28     	; 0x632 <__floatsisf+0x74>
 616:	96 e8       	ldi	r25, 0x86	; 134
 618:	86 2f       	mov	r24, r22
 61a:	70 e0       	ldi	r23, 0x00	; 0
 61c:	60 e0       	ldi	r22, 0x00	; 0
 61e:	2a f0       	brmi	.+10     	; 0x62a <__floatsisf+0x6c>
 620:	9a 95       	dec	r25
 622:	66 0f       	add	r22, r22
 624:	77 1f       	adc	r23, r23
 626:	88 1f       	adc	r24, r24
 628:	da f7       	brpl	.-10     	; 0x620 <__floatsisf+0x62>
 62a:	88 0f       	add	r24, r24
 62c:	96 95       	lsr	r25
 62e:	87 95       	ror	r24
 630:	97 f9       	bld	r25, 7
 632:	08 95       	ret

00000634 <__fp_inf>:
 634:	97 f9       	bld	r25, 7
 636:	9f 67       	ori	r25, 0x7F	; 127
 638:	80 e8       	ldi	r24, 0x80	; 128
 63a:	70 e0       	ldi	r23, 0x00	; 0
 63c:	60 e0       	ldi	r22, 0x00	; 0
 63e:	08 95       	ret

00000640 <__fp_nan>:
 640:	9f ef       	ldi	r25, 0xFF	; 255
 642:	80 ec       	ldi	r24, 0xC0	; 192
 644:	08 95       	ret

00000646 <__fp_pscA>:
 646:	00 24       	eor	r0, r0
 648:	0a 94       	dec	r0
 64a:	16 16       	cp	r1, r22
 64c:	17 06       	cpc	r1, r23
 64e:	18 06       	cpc	r1, r24
 650:	09 06       	cpc	r0, r25
 652:	08 95       	ret

00000654 <__fp_pscB>:
 654:	00 24       	eor	r0, r0
 656:	0a 94       	dec	r0
 658:	12 16       	cp	r1, r18
 65a:	13 06       	cpc	r1, r19
 65c:	14 06       	cpc	r1, r20
 65e:	05 06       	cpc	r0, r21
 660:	08 95       	ret

00000662 <__fp_round>:
 662:	09 2e       	mov	r0, r25
 664:	03 94       	inc	r0
 666:	00 0c       	add	r0, r0
 668:	11 f4       	brne	.+4      	; 0x66e <__fp_round+0xc>
 66a:	88 23       	and	r24, r24
 66c:	52 f0       	brmi	.+20     	; 0x682 <__fp_round+0x20>
 66e:	bb 0f       	add	r27, r27
 670:	40 f4       	brcc	.+16     	; 0x682 <__fp_round+0x20>
 672:	bf 2b       	or	r27, r31
 674:	11 f4       	brne	.+4      	; 0x67a <__fp_round+0x18>
 676:	60 ff       	sbrs	r22, 0
 678:	04 c0       	rjmp	.+8      	; 0x682 <__fp_round+0x20>
 67a:	6f 5f       	subi	r22, 0xFF	; 255
 67c:	7f 4f       	sbci	r23, 0xFF	; 255
 67e:	8f 4f       	sbci	r24, 0xFF	; 255
 680:	9f 4f       	sbci	r25, 0xFF	; 255
 682:	08 95       	ret

00000684 <__fp_split3>:
 684:	57 fd       	sbrc	r21, 7
 686:	90 58       	subi	r25, 0x80	; 128
 688:	44 0f       	add	r20, r20
 68a:	55 1f       	adc	r21, r21
 68c:	59 f0       	breq	.+22     	; 0x6a4 <__fp_splitA+0x10>
 68e:	5f 3f       	cpi	r21, 0xFF	; 255
 690:	71 f0       	breq	.+28     	; 0x6ae <__fp_splitA+0x1a>
 692:	47 95       	ror	r20

00000694 <__fp_splitA>:
 694:	88 0f       	add	r24, r24
 696:	97 fb       	bst	r25, 7
 698:	99 1f       	adc	r25, r25
 69a:	61 f0       	breq	.+24     	; 0x6b4 <__fp_splitA+0x20>
 69c:	9f 3f       	cpi	r25, 0xFF	; 255
 69e:	79 f0       	breq	.+30     	; 0x6be <__fp_splitA+0x2a>
 6a0:	87 95       	ror	r24
 6a2:	08 95       	ret
 6a4:	12 16       	cp	r1, r18
 6a6:	13 06       	cpc	r1, r19
 6a8:	14 06       	cpc	r1, r20
 6aa:	55 1f       	adc	r21, r21
 6ac:	f2 cf       	rjmp	.-28     	; 0x692 <__fp_split3+0xe>
 6ae:	46 95       	lsr	r20
 6b0:	f1 df       	rcall	.-30     	; 0x694 <__fp_splitA>
 6b2:	08 c0       	rjmp	.+16     	; 0x6c4 <__fp_splitA+0x30>
 6b4:	16 16       	cp	r1, r22
 6b6:	17 06       	cpc	r1, r23
 6b8:	18 06       	cpc	r1, r24
 6ba:	99 1f       	adc	r25, r25
 6bc:	f1 cf       	rjmp	.-30     	; 0x6a0 <__fp_splitA+0xc>
 6be:	86 95       	lsr	r24
 6c0:	71 05       	cpc	r23, r1
 6c2:	61 05       	cpc	r22, r1
 6c4:	08 94       	sec
 6c6:	08 95       	ret

000006c8 <__fp_zero>:
 6c8:	e8 94       	clt

000006ca <__fp_szero>:
 6ca:	bb 27       	eor	r27, r27
 6cc:	66 27       	eor	r22, r22
 6ce:	77 27       	eor	r23, r23
 6d0:	cb 01       	movw	r24, r22
 6d2:	97 f9       	bld	r25, 7
 6d4:	08 95       	ret

000006d6 <__mulsf3>:
 6d6:	0e 94 7e 03 	call	0x6fc	; 0x6fc <__mulsf3x>
 6da:	0c 94 31 03 	jmp	0x662	; 0x662 <__fp_round>
 6de:	0e 94 23 03 	call	0x646	; 0x646 <__fp_pscA>
 6e2:	38 f0       	brcs	.+14     	; 0x6f2 <__mulsf3+0x1c>
 6e4:	0e 94 2a 03 	call	0x654	; 0x654 <__fp_pscB>
 6e8:	20 f0       	brcs	.+8      	; 0x6f2 <__mulsf3+0x1c>
 6ea:	95 23       	and	r25, r21
 6ec:	11 f0       	breq	.+4      	; 0x6f2 <__mulsf3+0x1c>
 6ee:	0c 94 1a 03 	jmp	0x634	; 0x634 <__fp_inf>
 6f2:	0c 94 20 03 	jmp	0x640	; 0x640 <__fp_nan>
 6f6:	11 24       	eor	r1, r1
 6f8:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__fp_szero>

000006fc <__mulsf3x>:
 6fc:	0e 94 42 03 	call	0x684	; 0x684 <__fp_split3>
 700:	70 f3       	brcs	.-36     	; 0x6de <__mulsf3+0x8>

00000702 <__mulsf3_pse>:
 702:	95 9f       	mul	r25, r21
 704:	c1 f3       	breq	.-16     	; 0x6f6 <__mulsf3+0x20>
 706:	95 0f       	add	r25, r21
 708:	50 e0       	ldi	r21, 0x00	; 0
 70a:	55 1f       	adc	r21, r21
 70c:	62 9f       	mul	r22, r18
 70e:	f0 01       	movw	r30, r0
 710:	72 9f       	mul	r23, r18
 712:	bb 27       	eor	r27, r27
 714:	f0 0d       	add	r31, r0
 716:	b1 1d       	adc	r27, r1
 718:	63 9f       	mul	r22, r19
 71a:	aa 27       	eor	r26, r26
 71c:	f0 0d       	add	r31, r0
 71e:	b1 1d       	adc	r27, r1
 720:	aa 1f       	adc	r26, r26
 722:	64 9f       	mul	r22, r20
 724:	66 27       	eor	r22, r22
 726:	b0 0d       	add	r27, r0
 728:	a1 1d       	adc	r26, r1
 72a:	66 1f       	adc	r22, r22
 72c:	82 9f       	mul	r24, r18
 72e:	22 27       	eor	r18, r18
 730:	b0 0d       	add	r27, r0
 732:	a1 1d       	adc	r26, r1
 734:	62 1f       	adc	r22, r18
 736:	73 9f       	mul	r23, r19
 738:	b0 0d       	add	r27, r0
 73a:	a1 1d       	adc	r26, r1
 73c:	62 1f       	adc	r22, r18
 73e:	83 9f       	mul	r24, r19
 740:	a0 0d       	add	r26, r0
 742:	61 1d       	adc	r22, r1
 744:	22 1f       	adc	r18, r18
 746:	74 9f       	mul	r23, r20
 748:	33 27       	eor	r19, r19
 74a:	a0 0d       	add	r26, r0
 74c:	61 1d       	adc	r22, r1
 74e:	23 1f       	adc	r18, r19
 750:	84 9f       	mul	r24, r20
 752:	60 0d       	add	r22, r0
 754:	21 1d       	adc	r18, r1
 756:	82 2f       	mov	r24, r18
 758:	76 2f       	mov	r23, r22
 75a:	6a 2f       	mov	r22, r26
 75c:	11 24       	eor	r1, r1
 75e:	9f 57       	subi	r25, 0x7F	; 127
 760:	50 40       	sbci	r21, 0x00	; 0
 762:	9a f0       	brmi	.+38     	; 0x78a <__mulsf3_pse+0x88>
 764:	f1 f0       	breq	.+60     	; 0x7a2 <__mulsf3_pse+0xa0>
 766:	88 23       	and	r24, r24
 768:	4a f0       	brmi	.+18     	; 0x77c <__mulsf3_pse+0x7a>
 76a:	ee 0f       	add	r30, r30
 76c:	ff 1f       	adc	r31, r31
 76e:	bb 1f       	adc	r27, r27
 770:	66 1f       	adc	r22, r22
 772:	77 1f       	adc	r23, r23
 774:	88 1f       	adc	r24, r24
 776:	91 50       	subi	r25, 0x01	; 1
 778:	50 40       	sbci	r21, 0x00	; 0
 77a:	a9 f7       	brne	.-22     	; 0x766 <__mulsf3_pse+0x64>
 77c:	9e 3f       	cpi	r25, 0xFE	; 254
 77e:	51 05       	cpc	r21, r1
 780:	80 f0       	brcs	.+32     	; 0x7a2 <__mulsf3_pse+0xa0>
 782:	0c 94 1a 03 	jmp	0x634	; 0x634 <__fp_inf>
 786:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__fp_szero>
 78a:	5f 3f       	cpi	r21, 0xFF	; 255
 78c:	e4 f3       	brlt	.-8      	; 0x786 <__mulsf3_pse+0x84>
 78e:	98 3e       	cpi	r25, 0xE8	; 232
 790:	d4 f3       	brlt	.-12     	; 0x786 <__mulsf3_pse+0x84>
 792:	86 95       	lsr	r24
 794:	77 95       	ror	r23
 796:	67 95       	ror	r22
 798:	b7 95       	ror	r27
 79a:	f7 95       	ror	r31
 79c:	e7 95       	ror	r30
 79e:	9f 5f       	subi	r25, 0xFF	; 255
 7a0:	c1 f7       	brne	.-16     	; 0x792 <__mulsf3_pse+0x90>
 7a2:	fe 2b       	or	r31, r30
 7a4:	88 0f       	add	r24, r24
 7a6:	91 1d       	adc	r25, r1
 7a8:	96 95       	lsr	r25
 7aa:	87 95       	ror	r24
 7ac:	97 f9       	bld	r25, 7
 7ae:	08 95       	ret

000007b0 <__udivmodsi4>:
 7b0:	a1 e2       	ldi	r26, 0x21	; 33
 7b2:	1a 2e       	mov	r1, r26
 7b4:	aa 1b       	sub	r26, r26
 7b6:	bb 1b       	sub	r27, r27
 7b8:	fd 01       	movw	r30, r26
 7ba:	0d c0       	rjmp	.+26     	; 0x7d6 <__udivmodsi4_ep>

000007bc <__udivmodsi4_loop>:
 7bc:	aa 1f       	adc	r26, r26
 7be:	bb 1f       	adc	r27, r27
 7c0:	ee 1f       	adc	r30, r30
 7c2:	ff 1f       	adc	r31, r31
 7c4:	a2 17       	cp	r26, r18
 7c6:	b3 07       	cpc	r27, r19
 7c8:	e4 07       	cpc	r30, r20
 7ca:	f5 07       	cpc	r31, r21
 7cc:	20 f0       	brcs	.+8      	; 0x7d6 <__udivmodsi4_ep>
 7ce:	a2 1b       	sub	r26, r18
 7d0:	b3 0b       	sbc	r27, r19
 7d2:	e4 0b       	sbc	r30, r20
 7d4:	f5 0b       	sbc	r31, r21

000007d6 <__udivmodsi4_ep>:
 7d6:	66 1f       	adc	r22, r22
 7d8:	77 1f       	adc	r23, r23
 7da:	88 1f       	adc	r24, r24
 7dc:	99 1f       	adc	r25, r25
 7de:	1a 94       	dec	r1
 7e0:	69 f7       	brne	.-38     	; 0x7bc <__udivmodsi4_loop>
 7e2:	60 95       	com	r22
 7e4:	70 95       	com	r23
 7e6:	80 95       	com	r24
 7e8:	90 95       	com	r25
 7ea:	9b 01       	movw	r18, r22
 7ec:	ac 01       	movw	r20, r24
 7ee:	bd 01       	movw	r22, r26
 7f0:	cf 01       	movw	r24, r30
 7f2:	08 95       	ret

000007f4 <__itoa_ncheck>:
 7f4:	bb 27       	eor	r27, r27
 7f6:	4a 30       	cpi	r20, 0x0A	; 10
 7f8:	31 f4       	brne	.+12     	; 0x806 <__itoa_ncheck+0x12>
 7fa:	99 23       	and	r25, r25
 7fc:	22 f4       	brpl	.+8      	; 0x806 <__itoa_ncheck+0x12>
 7fe:	bd e2       	ldi	r27, 0x2D	; 45
 800:	90 95       	com	r25
 802:	81 95       	neg	r24
 804:	9f 4f       	sbci	r25, 0xFF	; 255
 806:	0c 94 06 04 	jmp	0x80c	; 0x80c <__utoa_common>

0000080a <__utoa_ncheck>:
 80a:	bb 27       	eor	r27, r27

0000080c <__utoa_common>:
 80c:	fb 01       	movw	r30, r22
 80e:	55 27       	eor	r21, r21
 810:	aa 27       	eor	r26, r26
 812:	88 0f       	add	r24, r24
 814:	99 1f       	adc	r25, r25
 816:	aa 1f       	adc	r26, r26
 818:	a4 17       	cp	r26, r20
 81a:	10 f0       	brcs	.+4      	; 0x820 <__utoa_common+0x14>
 81c:	a4 1b       	sub	r26, r20
 81e:	83 95       	inc	r24
 820:	50 51       	subi	r21, 0x10	; 16
 822:	b9 f7       	brne	.-18     	; 0x812 <__utoa_common+0x6>
 824:	a0 5d       	subi	r26, 0xD0	; 208
 826:	aa 33       	cpi	r26, 0x3A	; 58
 828:	08 f0       	brcs	.+2      	; 0x82c <__utoa_common+0x20>
 82a:	a9 5d       	subi	r26, 0xD9	; 217
 82c:	a1 93       	st	Z+, r26
 82e:	00 97       	sbiw	r24, 0x00	; 0
 830:	79 f7       	brne	.-34     	; 0x810 <__utoa_common+0x4>
 832:	b1 11       	cpse	r27, r1
 834:	b1 93       	st	Z+, r27
 836:	11 92       	st	Z+, r1
 838:	cb 01       	movw	r24, r22
 83a:	0c 94 1f 04 	jmp	0x83e	; 0x83e <strrev>

0000083e <strrev>:
 83e:	dc 01       	movw	r26, r24
 840:	fc 01       	movw	r30, r24
 842:	67 2f       	mov	r22, r23
 844:	71 91       	ld	r23, Z+
 846:	77 23       	and	r23, r23
 848:	e1 f7       	brne	.-8      	; 0x842 <strrev+0x4>
 84a:	32 97       	sbiw	r30, 0x02	; 2
 84c:	04 c0       	rjmp	.+8      	; 0x856 <strrev+0x18>
 84e:	7c 91       	ld	r23, X
 850:	6d 93       	st	X+, r22
 852:	70 83       	st	Z, r23
 854:	62 91       	ld	r22, -Z
 856:	ae 17       	cp	r26, r30
 858:	bf 07       	cpc	r27, r31
 85a:	c8 f3       	brcs	.-14     	; 0x84e <strrev+0x10>
 85c:	08 95       	ret

0000085e <_exit>:
 85e:	f8 94       	cli

00000860 <__stop_program>:
 860:	ff cf       	rjmp	.-2      	; 0x860 <__stop_program>
